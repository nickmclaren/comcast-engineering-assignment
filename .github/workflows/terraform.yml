name: "EKS Pipeline"

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
    inputs:
      destroy:
        description: 'Run tf destroy'
        required: true
        default: 'false'

jobs:
  setup-resources:
    name: 'Setup AWS Resources'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'us-west-2'

      - name: Install Python and boto3
        run: |
          sudo apt-get update
          sudo apt-get install python3-pip
          pip3 install boto3

      - name: Setup DynamoDB Table and S3 Bucket
        run: python3 db_table_s3_bucket.py
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'us-west-2'

  terraform:
    name: 'Deploy Terraform Resources'
    needs: setup-resources
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: '1.3.0'

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'us-west-2'

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color

      - name: Upload Terraform Plan as Artifact (failure!)
        if: steps.plan.outcome == 'failure'
        uses: actions/upload-artifact@v2
        with:
          name: terraform-plan-failure
          path: plan.out

      - name: Upload Terraform Plan as Artifact (success....)
        if: steps.plan.outcome == 'success'
        uses: actions/upload-artifact@v2
        with:
          name: terraform-plan-success
          path: plan.out

      - name: Terraform Apply
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve

      - name: Terraform Destroy
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.destroy == 'true'
        run: terraform destroy -auto-approve

      - name: Remove Terraform State File from S3
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.destroy == 'true'
        run: aws s3 rm s3://terraform-state-file-bucket-nm/comcast-engineering-project-/terraform.tfstate

      - name: Delete S3 Bucket
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.destroy == 'true'
        run: aws s3 rb s3://terraform-state-file-bucket-nm --force

      - name: Delete DynamoDB Table
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.destroy == 'true'
        run: aws dynamodb delete-table --table-name terraform-state-locking-table
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'us-west-2'
